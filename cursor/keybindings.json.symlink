[
    // basic maps
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "searchViewletFocus"
    },
    // run :noh
    {
        "key": ", space",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": ":noh<CR>",
    },
    // splits
    {
        "key": "ctrl+a s",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+a shift+s",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.alternativeAcceptSelectedQuickOpenItem",
        "when": "inQuickOpen",
    },
    // not working, missing the currently selected file
    {
        "key": "ctrl+s",
        "command": "vscode-neovim.send",
        "args": ":split<CR>",
        "when": "inQuickOpen",
    },
    // movement
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
    },
    // TODO: this is not working
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "activeAIChatEditor"
    },
    // movement in menus
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions"
    },
    {
        "key": "ctrl+j",
        "command": "runCommands",
        "when": "searchViewletFocus",
        "args": {
            "commands": [
                "search.action.focusSearchList",
                "list.focusDown",
            ]
        }
    },
    {
        "key": "ctrl+k",
        "command": "runCommands",
        "when": "searchViewletFocus",
        "args": {
            "commands": [
                "search.action.focusSearchList",
                "list.focusUp",
            ]
        }
    },
    // moving splits
    {
        "key": "alt+l",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.moveEditorToBelowGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "editorTextFocus"
    },
    // sidebar
    {
        "key": "ctrl+n",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "space n",
        "command": "workbench.view.explorer",
        // allow shortcut in blank slate after :qa
        "when": "(editorTextFocus && neovim.mode != insert) || (!editorIsOpen && terminal.active)"
    },
    {
        "key": "space n",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus"
    },
    {
        "key": "space shift+n",
        "command": "workbench.files.action.showActiveFileInExplorer",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "filesExplorerFocus"
    },
    // terminal control: splits
    {
        "key": "ctrl+a s",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    // terminal control: movement
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    // testing
    {
        "key": ", c",
        "command": "testing.runAtCursor",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": ", f",
        "command": "testing.runCurrentFile",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": ", a",
        "command": "testing.runAll",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": ", ,",
        "command": "testing.reRunLastRun",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": ", w",
        "command": "testing.reRunFailTests",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    // projectionist/vscode-alternate-alternate-file
    {
        "key": "space a a",
        "command": "alternateFile.createAlternateFile",
        "when": "editorTextFocus && neovim.mode != insert",
    },
    {
        "key": "space a v",
        "command": "alternateFile.createAlternateFileInSplit",
        "when": "editorTextFocus && neovim.mode != insert",
    }
]
