#!/usr/bin/env zsh

# configurable definitions
CI_WAIT_PERIOD=${CI_WAIT_PERIOD:-4}

# global variables for a closure in TRAPUSR1
CI_PASSED=0
CI_STATUS=0
ASYNC_PROC=0

source $DOTFILES/functions/helpers.zsh

function TRAPUSR1() {
  wait $ASYNC_PROC
  CI_STATUS=$?
  CI_PASSED=1
}

function ci_is_setup() {
  [[ $(gh pr status --json state -q '.currentBranch') != "" ]]
}

function status_rollup() {
  gh pr status \
    --json statusCheckRollup \
    -q '.currentBranch.statusCheckRollup.[].status' 2>/dev/null \
    | uniq
}

function conclusion_rollup() {
  gh pr status \
    --json statusCheckRollup \
    -q '.currentBranch.statusCheckRollup.[].conclusion' 2> /dev/null \
    | uniq
}

function ci_status() {
  local progress=$(status_rollup)
  local results=$(conclusion_rollup)

  if [[ $progress =~ "QUEUED" ]] || [[ $progress =~ "IN_PROGRESS" ]]; then
    echo "pending"
  elif [[ $progress == "COMPLETED" ]] && [[ $results =~ "FAILURE" ]]; then
    echo "failure"
  elif [[ $progress == "COMPLETED" ]] && [[ $results == "SUCCESS" ]]; then
    echo "success"
  else
    echo "no status"
  fi
}

# return codes:
# 0: CI passed
# 1: CI run failed
# 2: CI is not running
# 3: CI is not setup
# 4: Unknown status

function check_ci() {
  if ! ci_is_setup; then
    kill -s USR1 $$
    exit 3
  fi

  local current_status=$(ci_status)

  while [[ $current_status == "pending" ]]; do
    sleep $CI_WAIT_PERIOD
    current_status=$(ci_status)
  done

  kill -s USR1 $$

  case $current_status in
    "success")
      exit 0
      ;;
    "failure")
      exit 1
      ;;
    "no status")
      _mnds_pp_warn "ci-wait" "CI is not running"
      exit 2
      ;;
    *)
      _mnds_pp_error "ci-wait" "Unknown CI status"
      exit 4
      ;;
  esac
}

function print_loader() {
  local spinner=(⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠇ ⠏)
  local bold=$(tput bold)
  local normal=$(tput sgr0)

  for spin in "${spinner[@]}"; do
    printf "\r${bold}[ci-wait]${normal}: $spin waiting..."
    sleep 0.1
  done
}

function clear_line() {
  printf "\033[1K\r"
}

function main() {
  check_ci &
  ASYNC_PROC=$!

  while [ $CI_PASSED -eq 0 ]; do
    print_loader
  done

  clear_line

  case $CI_STATUS in
    0)
      _mnds_pp_success "ci-wait" "✓"
      ;;
    1)
      _mnds_pp_error "ci-wait" "✗"
      ;;
    2)
      _mnds_pp_info "ci-wait" "CI is not running"
      ;;
    3)
      _mnds_pp_warn "ci-wait" "CI is not setup"
      ;;
    4)
      _mnds_pp_error "ci-wait" "unknown status"
      ;;
  esac

  exit $CI_STATUS
}

main
