#!/usr/bin/env zsh

# configurable definitions
CI_WAIT_PERIOD=${CI_WAIT_PERIOD:-2}

# global variables for a closure in TRAPUSR1
CI_PASSED=0
CI_STATUS=0
ASYNC_PROC=0

source $DOTFILES/functions/helpers.zsh

function TRAPUSR1() {
  wait $ASYNC_PROC
  CI_STATUS=$?
  CI_PASSED=1
}

function status_rollup() {
  gh pr status \
    --json statusCheckRollup \
    -q '.currentBranch.statusCheckRollup.[].status' 2>/dev/null \
    | uniq
}

function conclusion_rollup() {
  gh pr status \
    --json statusCheckRollup \
    -q '.currentBranch.statusCheckRollup.[].conclusion' 2> /dev/null \
    | uniq
}

function ci_status() {
  local progress=$(status_rollup)
  local results=$(conclusion_rollup)

  if [[ $progress =~ "QUEUED" ]] || [[ $progress =~ "IN_PROGRESS" ]]; then
    echo "pending"
  elif [[ $progress == "COMPLETED" ]] && [[ $results =~ "FAILURE" ]]; then
    echo "failure"
  elif [[ $progress == "COMPLETED" ]] && [[ $results == "SUCCESS" ]]; then
    echo "success"
  else
    echo "no status"
  fi
}

function check_ci() {
  local current_status=$(ci_status)

  while [[ $current_status == "pending" ]]; do
    sleep $CI_WAIT_PERIOD
    current_status=$(ci_status)
  done

  kill -s USR1 $$

  # 0: CI passed
  # 2: no CI running
  # 1: Failed for any other reason
  if [[ $current_status == "success" ]]; then
    exit 0
  elif [[ $current_status == "no status" ]]; then
    exit 2
  else
    exit 1
  fi
}

function print_loader() {
  local spinner=(⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠇ ⠏)
  local bold=$(tput bold)
  local normal=$(tput sgr0)

  for spin in "${spinner[@]}"; do
    printf "\r${bold}[ci-wait]${normal}: $spin waiting..."
    sleep 0.1
  done
}

function clear_line() {
  printf "\033[1K\r"
}

function main() {
  check_ci &
  ASYNC_PROC=$!

  while [ $CI_PASSED -eq 0 ]; do
    print_loader
  done

  clear_line

  if [ $CI_STATUS -eq 0 ]; then
    _mnds_pp_success "ci-wait" "✓"
  elif [ $CI_STATUS -eq 2 ]; then
    _mnds_pp_info "ci-wait" "ci not running"
  else
    _mnds_pp_error "ci-wait" "✗"
  fi

  exit $CI_STATUS
}

main
